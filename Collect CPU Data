USE master
GO
IF	OBJECT_ID ('DBATasks..tblCPUUsage')  IS  NULL
CREATE TABLE DBATasks..tblCPUUsage(
	[SQLCPUUsage] [int] NULL,
	[IdleProcess] [int] NULL,
	[RestCPUUsage] [int] NULL,
	[RunTime] [datetime] NULL
) ON [PRIMARY]

GO
USE [msdb]
GO
IF  EXISTS (SELECT job_id FROM msdb.dbo.sysjobs_view WHERE name = N'DBA - Collect CPU Data')
BEGIN
EXEC msdb.dbo.sp_delete_job @job_name = N'DBA - Collect CPU Data',  @delete_unused_schedule=1
END
EXEC  msdb.dbo.sp_add_job @job_name=N'DBA - Collect CPU Data', 
		@enabled=1, 
		@notify_level_eventlog=0, 
		@notify_level_email=2, 
		@notify_level_netsend=2, 
		@notify_level_page=2, 
		@delete_level=0, 
		@category_name=N'Data Collector', 
		@owner_login_name=N'sa'
GO
EXEC msdb.dbo.sp_add_jobserver @job_name=N'DBA - Collect CPU Data', @server_name = @@SERVERNAME
GO
USE [msdb]
GO
EXEC msdb.dbo.sp_add_jobstep @job_name=N'DBA - Collect CPU Data', @step_name=N'CPU Data Collector', 
		@step_id=1, 
		@cmdexec_success_code=0, 
		@on_success_action=1, 
		@on_fail_action=2, 
		@retry_attempts=0, 
		@retry_interval=0, 
		@os_run_priority=0, @subsystem=N'TSQL', 
		@command=N'SET QUOTED_IDENTIFIER ON;
		DECLARE @ts_now bigint = (SELECT cpu_ticks/(cpu_ticks/ms_ticks) FROM sys.dm_os_sys_info WITH (NOLOCK)); 
INSERT INTO DBATasks..tblCPUUsage
SELECT SQLProcessUtilization AS SQLCPUUsage, 
               SystemIdle AS IdleProcess, 
               100 - SystemIdle - SQLProcessUtilization AS RestCPUUsage, 
               DATEADD(ms, -1 * (@ts_now - [timestamp]), GETDATE()) AS RunTime 
FROM (SELECT record.value(''(./Record/@id)[1]'', ''int'') AS record_id, 
			record.value(''(./Record/SchedulerMonitorEvent/SystemHealth/SystemIdle)[1]'', ''int'') 
			AS [SystemIdle], 
			record.value(''(./Record/SchedulerMonitorEvent/SystemHealth/ProcessUtilization)[1]'', ''int'') 
			AS [SQLProcessUtilization], [timestamp] 
	  FROM (SELECT [timestamp], CONVERT(xml, record) AS [record] 
			FROM sys.dm_os_ring_buffers WITH (NOLOCK)
			WHERE ring_buffer_type = N''RING_BUFFER_SCHEDULER_MONITOR'' 
			AND record LIKE N''%<SystemHealth>%'') AS x) AS y 
WHERE DATEADD(ms, -1 * (@ts_now - [timestamp]), GETDATE()) > ISNULL( (SELECT MAX(RunTime) FROM DBATasks..tblCPUUsage),DATEADD(MI,-256,GETDATE()))
GO
DELETE DBATasks..tblCPUUsage
WHERE RunTime < DATEADD(DD,-30,GETDATE())
GO', 
		@database_name=N'master', 
		@flags=0
GO
USE [msdb]
GO
EXEC msdb.dbo.sp_update_job @job_name=N'DBA - Collect CPU Data', 
		@enabled=1, 
		@start_step_id=1, 
		@notify_level_eventlog=0, 
		@notify_level_email=2, 
		@notify_level_netsend=2, 
		@notify_level_page=2, 
		@delete_level=0, 
		@description=N'', 
		@category_name=N'Data Collector', 
		@owner_login_name=N'sa', 
		@notify_email_operator_name=N'', 
		@notify_netsend_operator_name=N'', 
		@notify_page_operator_name=N''
GO
USE [msdb]
GO
EXEC msdb.dbo.sp_add_jobschedule @job_name=N'DBA - Collect CPU Data', @name=N'Hourly', 
		@enabled=1, 
		@freq_type=4, 
		@freq_interval=1, 
		@freq_subday_type=8, 
		@freq_subday_interval=1, 
		@freq_relative_interval=0, 
		@freq_recurrence_factor=1, 
		@active_start_date=20171102, 
		@active_end_date=99991231, 
		@active_start_time=0, 
		@active_end_time=235959
GO
----Rollback
--IF OBJECT_ID ('DBATasks..tblCPUUsage') IS NOT NULL 
--DROP TABLE DBATasks..[tblCPUUsage]
--GO
--IF  EXISTS (SELECT job_id FROM msdb.dbo.sysjobs_view WHERE name = N'DBA - Collect CPU Data')
--BEGIN
--EXEC msdb.dbo.sp_delete_job @job_name = N'DBA - Collect CPU Data',  @delete_unused_schedule=1
--END
