SELECT 
	@@SERVERNAME LocalServerName,
	ar.replica_server_name ReplicaServerName, 
	adc.database_name DBName, 
	ag.name AS AGName, 
	drs.synchronization_state_desc SyncStateDesc, 
	drs.synchronization_health_desc SyncHealthDesc, 
	CASE WHEN DATEDIFF(SS,drs.last_sent_time,GETDATE()) < 30 then 'Now'
	else convert(varchar(10),last_sent_time,112) end  LastSentTime, 

	CASE WHEN DATEDIFF(SS,drs.last_received_time,GETDATE()) < 30 then 'Now'
	else convert(varchar(10),last_received_time,112) end  LastReceiveTime, 

	CASE WHEN DATEDIFF(SS,drs.last_hardened_time,GETDATE()) < 30 then 'Now'
	else convert(varchar(10),last_hardened_time,112) end  LastHardenedTime, 

	CASE WHEN DATEDIFF(SS,drs.last_redone_time,GETDATE()) < 30 then 'Now'
	else convert(varchar(120),last_redone_time) end  LastRedoneTime, 

	Format( drs.log_send_queue_size, '##,##0') LogSendQueueSize_KB, 
	FORMAT(drs.log_send_rate, '##,##0')  LogSendRate_KBperSec, 
	DATEADD(SS,drs.log_send_queue_size/drs.log_send_rate,GETDATE()) LogSendFinishTime,
	FORMAT(drs.redo_queue_size,'##,##0') RedoQueueSize_KB, 
	FORMAT(drs.redo_rate,'##,##0') RedoRate_KBperSec, 
	DATEADD(SS,drs.redo_queue_size/drs.redo_rate,GETDATE()) RedoFinishTIme,
	drs.last_commit_time LastCommitTime
FROM sys.dm_hadr_database_replica_states AS drs
INNER JOIN sys.availability_databases_cluster AS adc 
	ON drs.group_id = adc.group_id AND 
	drs.group_database_id = adc.group_database_id
INNER JOIN sys.availability_groups AS ag
	ON ag.group_id = drs.group_id
INNER JOIN sys.availability_replicas AS ar 
	ON drs.group_id = ar.group_id AND 
	drs.replica_id = ar.replica_id
where last_sent_lsn is not null and (log_send_queue_size > 1000 or redo_queue_size > 1000)
and (last_redone_time < dateadd(mi,-30,getdate()) or last_sent_time  < dateadd(mi,-30,getdate()) or last_received_time  < dateadd(mi,-30,getdate()) or last_hardened_time  < dateadd(mi,-30,getdate()) or last_commit_time  < dateadd(mi,-30,getdate()) )
ORDER BY 
	ag.name, 
	ar.replica_server_name, 
	adc.database_name;
